name: docker_debian_packaging

on:
  release:
  schedule:
    - cron: '0 2 * * *'
  repository_dispatch:
    types: [backend_automation]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        image:
          - ubuntu:xenial
          - ubuntu:bionic
          - ubuntu:focal
          - debian:bullseye
    runs-on: ubuntu-latest
 
    steps:
      - name: modify image name
        run: |
          echo "image_name=$(echo ${{ matrix.image}}| sed 's/:/_/')" >> $GITHUB_ENV
      - name: set artifacts dir & name
        run: |
          echo "art_dir=nwchem-${{ env.image_name }}" >> $GITHUB_ENV
          echo "art_name=nwchem-${{ env.image_name }}.pkg" >> $GITHUB_ENV
      - name: delete artifact
        uses: geekyeggo/delete-artifact@v2
        with:
          name: ${{ env.art_name}}
          failOnError: false 
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 5
      - name: Setup cache
        id: setup-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/cache
          key: nwchem-debian-v001
      - name: docker build
        run: |
          cd nwchem
          echo matrix images is ${{ matrix.image }}
          ./docker_build.sh ${{ matrix.image }}
      - name: copy packages
        run: |
          find . -name "*deb" ||  true
          mkdir  -p ${{ env.art_dir }}
          cp `find nwchem -name "*deb" ` ${{ env.art_dir }}/.
      - name: rename packages
        run: |
          cd ${{ env.art_dir }}
          for f in *deb; do mv $f $(echo $f|sed s/.deb/.${{env.image_name}}.deb/) ; done
          ls -lrat
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.art_name }}
          path: ${{ env.art_dir }}
          retention-days: 7
